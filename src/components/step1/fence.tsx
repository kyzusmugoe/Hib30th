import React, { useEffect, useState } from "react";

const member = (cloth: boolean) => {
    return `data:image/svg+xml;charset=utf8,<svg id="member_standby" data-name="member_standby" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 47.86 116.51">
            <path fill="rgb(23, 35, 69)" class="cls-1" d="M53,113.6c-1-.3-5.4,0-6.6-.3a4.62,4.62,0,0,1-1.9-.7c-.4-.3-3.4-13.4-3.9-15.6S40,86.1,38.8,83s-2.3-5.8-2.3-5.8,2.9-8.5,2.9-13.9c0-2.3.1-4.9.2-7.1a20.53,20.53,0,0,1-9.3-.9c-2.8-.9-4.8-1.7-6.2-2.2a21.14,21.14,0,0,1-2.7,3.8,13.54,13.54,0,0,0-3.18,7.27c0,.32-.07.62-.09.93v.27a8.58,8.58,0,0,0,0,.88c0,.14,0,.28,0,.42,0,.39.08.78.14,1.13.7,3.1,3.7,5.6,6.5,9.1l1.33,1.66c0,3.09,0,8.36-.33,9.34-.5,1.5-2.2,2.2-5.8,2.3a46.69,46.69,0,0,1-7-.3c-.8-.1-2.1-.9-3-.6s-1.3,1.6-1.2,3.2,1,2,.5,3.5-.1,3.6.2,4.9,1.2,2.1,1.6,1.3S13.6,94,13.6,94s11,1.4,13.7,1.4c2.35,0,3.71.15,5-2.25a26.65,26.65,0,0,0,1,7c1.3,3.7,5.3,11.1,6.2,14.4s1.7,6.9,2.5,7.2,10-5.5,10.6-6.2S54,113.9,53,113.6Z" transform="translate(-8.5 -5.7)"/>
            <path class="cls-2" d="M42.9,14s.3-1.2-4.2-1.6-3.7.7-4.2,2-1.8,1.3-2.5,1.7,1.1.1,2,1.5,1.4,2.5.9,3.8.6,1.4,0,3c0,0-4.4,1.6-5.5-1.7a8.6,8.6,0,0,0-1.9-2.9c-.6-.6-1.1-1.9-.5-4.7.6-2.6.7-3.2.9-4.3a5.48,5.48,0,0,1,3.6-4.1,10.71,10.71,0,0,1,5-1c1.2,0,3.8.7,4.4,1.7s2.2,1.9,3.2,2.8A2.53,2.53,0,0,1,42.9,14Z" transform="translate(-8.5 -5.7)"/>
            <path fill="${cloth == true ? "rgb(22, 57, 29)" : "rgb(157, 198, 119)"}" class="cls-3" d="M55.3,45.7c-.2-1-1.7,1.4-2.5-.1s0-.8-1.9-4.7c-.21-.41-.42-.84-.62-1.27a64.41,64.41,0,0,0-3.86-9c-.08-.16-.15-.32-.22-.43a2.43,2.43,0,0,0-.14-.2,5.46,5.46,0,0,0-1.16-1.5,5.18,5.18,0,0,0-1.72-.88c-3.42-2.08-11.1-2.6-15.57-1.91a9.3,9.3,0,0,0-2.63.22,4.74,4.74,0,0,0-1.78.17,4.26,4.26,0,0,0-1.17.69h0c-2.31,1.3-4.81,4.59-6.53,7.49-1.17,1.64-7,10.15-7,11a4.72,4.72,0,0,0,2.82,3A28.71,28.71,0,0,0,17.8,50.7c1.52.35,2.93.63,4.05.87-1.16,6.31-3.63,9.3-3.35,10.13,1.6,4.8,21.1-3.6,21.1-3.6s-.4-6.8.9-11.8c.83-3.33,1.58-6,2.2-8.21a37.66,37.66,0,0,0,2.66,4.47A65.52,65.52,0,0,0,50.3,51.8c2.2,2.8,2.8,2.2,4-.1A10.43,10.43,0,0,0,55.3,45.7ZM16,44.11c2.15-2.44,4.77-5.49,6.79-7.87-.07,3.51,0,7.58-.44,11.76-.79-.32-1.6-.66-2.32-1A19.11,19.11,0,0,1,16,44.11Z" transform="translate(-8.5 -5.7)"/>
            <g fill="rgb(255, 187, 153)">
            <path class="cls-4" d="M10,89.3c-.9.3-1.3,1.6-1.2,3.2s1,2,.5,3.5-.1,3.6.2,4.9,1.2,2.1,1.6,1.3S13.6,94,13.6,94s1.3.2,3,.4l1-4.2a29.93,29.93,0,0,1-4.6-.3C12.2,89.8,10.9,89,10,89.3Z" transform="translate(-8.5 -5.7)"/>
            <path class="cls-4" d="M55.7,41.6c-.3-.5-2.6-.4-3.3-.2,0,0-1.8-.1-1.9.5s-.1,2.8.3,3.2,1.27,0,1.3-.67c.3,1.35.75,2.7,1.1,2.77s2.5,0,3-.9S55.9,42.2,55.7,41.6Z" transform="translate(-8.5 -5.7)"/>
            <path class="cls-4" d="M38.32,24.17A8.19,8.19,0,0,0,42.8,19c.5-2.6.4-5.7-1.1-6.4s-5.9-.4-7,.2a17.89,17.89,0,0,0-2.8,2.8s-.8-2.2-2-.8a2.35,2.35,0,0,0,.1,3.5,1.43,1.43,0,0,0,1.6-.1A10.91,10.91,0,0,0,34,23c-.1.57-.21,1.14-.32,1.63-.5,2.2,4.2,1.4,4.2,1.4Z" transform="translate(-8.5 -5.7)"/>
            <path class="cls-4" d="M30.8,49h.5c.5,0,.4-.7.4-.7s-2-1.3-2.7-1.1a18,18,0,0,0-3,2.2.77.77,0,0,1-.3-.1l-2.1,2.6a2.8,2.8,0,0,0,.6.1,10.19,10.19,0,0,0,4.2,1.5,3.07,3.07,0,0,0,2.8-1.3c.5-.5.9-1,1.2-1.3s.3-1,.3-1.3S30.8,49,30.8,49Z" transform="translate(-8.5 -5.7)"/>
            <path class="cls-4" d="M53,113.6c-1-.3-5.4,0-6.6-.3a4.62,4.62,0,0,1-1.9-.7,35.56,35.56,0,0,1-1.6-5.9l-5.6,2.4a32.24,32.24,0,0,1,2.2,5.4c.9,3.3,1.7,6.9,2.5,7.2s10-5.5,10.6-6.2S54,113.9,53,113.6Z" transform="translate(-8.5 -5.7)"/>
            </g>
            <path fill="rgb(150, 56, 35)" class="cls-5" d="M53.5,113.6c-1-.3-5.8,0-7-.3a4.35,4.35,0,0,1-1.7-.6,1.13,1.13,0,0,0-.7.9,17.65,17.65,0,0,0-.2,2.4,19.52,19.52,0,0,1-3.2,1.7,1.27,1.27,0,0,1-.6.1c.6,2.3,1.2,4.2,1.8,4.4.8.3,10.6-5.9,11.3-6.6S54.5,113.9,53.5,113.6Z" transform="translate(-8.5 -5.7)"/>
            <path fill="rgb(150, 56, 35)" class="cls-5" d="M12.4,94.9c-.4,0-.5-.2-.4-2.3a3.77,3.77,0,0,1,1-2.8c-.8-.1-2.1-.9-3-.6s-1.3,1.6-1.2,3.2,1,2.1.5,3.6-.1,3.6.2,4.9,1.2,2.1,1.6,1.3c.3-.6,1.7-5.4,2.2-7.4A3.44,3.44,0,0,1,12.4,94.9Z" transform="translate(-8.5 -5.7)"/>
        </svg>`
}

type fenceProps = {
    type: string
    money: number
    setMember: boolean
}


export default (props: fenceProps) => {
    const [state, setState] = useState<boolean>(true)
    useEffect(() => {
        setState(props.setMember)
    }, [props])

    return (
        <div
            style={{
                position: "relative"
            }}
        /*
        onClick={() => {
            setstate(!state)
        }}*/

        >
            {
                state ?
                    <img style={{ width: 60 }} src={"./images/event30/fence.svg"} /> :
                    <div
                        style={{
                            position: "absolute",
                            bottom: 0,
                            display: "flex",
                            alignItems: "flex-end"
                        }}
                    >

                        <img style={{ width: 30 }} src={member(props.type == "一般人力")} />
                        <div style={{ position: "relative" }}>
                            <img style={{ width: 80 }} src={"./images/event30/money.svg"} />
                            <span style={{ position: "absolute", top: 2, left: 30 }} >
                                {
                                    props.money > 100000 ?
                                        props.money + "萬" :
                                        Math.floor(props.money * 0.0001) + "萬"
                                }
                            </span>
                        </div>
                    </div>
            }
        </div>

    )
}


